{
	"info": {
		"_postman_id": "2b7517b1-498a-4a76-9e8b-9dad7888e652",
		"name": "Final project (Fathul Maarif)",
		"description": "# üöÄ Get started here\n\nThis collection guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this collection**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these request types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT and PATCH requests.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a variable called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more scripts in \"Tests\" to verify if the API works as expected and execute flows.\n    \n\n## ‚ÑπÔ∏è Resources\n\n[Building requests](https://learning.postman.com/docs/sending-requests/requests/)  \n[Authorizing requests](https://learning.postman.com/docs/sending-requests/authorization/)  \n[Using variables](https://learning.postman.com/docs/sending-requests/variables/)  \n[Managing environments](https://learning.postman.com/docs/sending-requests/managing-environments/)  \n[Writing scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8703531",
		"_collection_link": "https://galactic-comet-822845.postman.co/workspace/FinalProject~97d4410e-ea0b-4a38-92b0-8c874cbaef46/collection/8703531-2b7517b1-498a-4a76-9e8b-9dad7888e652?action=share&source=collection_link&creator=8703531"
	},
	"item": [
		{
			"name": "fake-controller",
			"item": [
				{
					"name": "login",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin\",\n    \"password\": \"banksultra123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth"
							]
						},
						"description": "This request uses a Personal Access Token as a Bearer Token to authenticate with the GitHub API and create a new private repository.\n\nTo start, you'll need to follow the [steps to generate a Personal Access Token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) on GitHub. You can generate a **classic token with 'repo' scope** to use with this request.\n\nOnce your token is generated, you must copy it immediately as it won't be shown again. Then go to this collection's \"variables\" tab and paste it as the current value for the `githubAccessToken` variable.\n\nView the Authorization tab for this request. Note it uses the 'Bearer token' auth method, and the value is pre-filled to reference the `githubAccessToken` variable we've set our Personal Access Token in.\n\nIf you want, adjust the name of the repository to be created in the 'Body' tab. Then hit 'Send' to create a new repository using Bearer token authentication."
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user 1\",\n    \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"logout"
							]
						},
						"description": "This request uses a Personal Access Token as a Bearer Token to authenticate with the GitHub API and create a new private repository.\n\nTo start, you'll need to follow the [steps to generate a Personal Access Token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) on GitHub. You can generate a **classic token with 'repo' scope** to use with this request.\n\nOnce your token is generated, you must copy it immediately as it won't be shown again. Then go to this collection's \"variables\" tab and paste it as the current value for the `githubAccessToken` variable.\n\nView the Authorization tab for this request. Note it uses the 'Bearer token' auth method, and the value is pre-filled to reference the `githubAccessToken` variable we've set our Personal Access Token in.\n\nIf you want, adjust the name of the repository to be created in the 'Body' tab. Then hit 'Send' to create a new repository using Bearer token authentication."
					},
					"response": []
				}
			],
			"description": "StartFragmentOperations pertaining to user login and logout in the BRS applicationEndFragment"
		},
		{
			"name": "bus-reservation-controller",
			"item": [
				{
					"name": "getAllStop",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/reservation/stops",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"reservation",
								"stops"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTripByStop",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/reservation/tripsbystops?sourceStop=1&destStop=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"reservation",
								"tripsbystops"
							],
							"query": [
								{
									"key": "sourceStop",
									"value": "1"
								},
								{
									"key": "destStop",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getTripSchedule",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/reservation/tripsSchedules?tripDate=2023-12-12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"reservation",
								"tripsSchedules"
							],
							"query": [
								{
									"key": "tripDate",
									"value": "2023-12-12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "bookTicket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ticket_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/reservation/bookticket",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"reservation",
								"bookticket"
							]
						}
					},
					"response": []
				}
			],
			"description": "StartFragmentOperation pertaining to agency management and ticket issue in the BRS aplicationEndFragment"
		},
		{
			"name": "user-controller",
			"item": [
				{
					"name": "updateUser",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin\",\r\n    \"firstName\":\"Bank\",\r\n    \"lastName\":\"sultra\",\r\n    \"mobileNumber\":\"3232323\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/userManagement/updateUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"userManagement",
								"updateUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "signup",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin\",\n    \"password\": \"banksultra123\",\n    \"firstName\":\"Bank\",\n    \"lastName\":\"Sultra\",\n    \"mobileNumber\":\"099289232\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/user/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"user",
								"signup"
							]
						},
						"description": "This request uses a Personal Access Token as a Bearer Token to authenticate with the GitHub API and create a new private repository.\n\nTo start, you'll need to follow the [steps to generate a Personal Access Token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) on GitHub. You can generate a **classic token with 'repo' scope** to use with this request.\n\nOnce your token is generated, you must copy it immediately as it won't be shown again. Then go to this collection's \"variables\" tab and paste it as the current value for the `githubAccessToken` variable.\n\nView the Authorization tab for this request. Note it uses the 'Bearer token' auth method, and the value is pre-filled to reference the `githubAccessToken` variable we've set our Personal Access Token in.\n\nIf you want, adjust the name of the repository to be created in the 'Body' tab. Then hit 'Send' to create a new repository using Bearer token authentication."
					},
					"response": []
				}
			],
			"description": "StartFragmentOperation pertaining to user management in the BRS applicationEndFragment"
		},
		{
			"name": "END user",
			"item": [
				{
					"name": "getAllagency",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/agency/getAllagency",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"agency",
								"getAllagency"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllBus",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/bus/getAllBus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bus",
								"getAllBus"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllTrip",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/trip/getAllTrip",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"trip",
								"getAllTrip"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllTicket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/ticket/getAllTicket",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"ticket",
								"getAllTicket"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllUser",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/userManagement/getAllUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"userManagement",
								"getAllUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "createAgency",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE5NTYsImV4cCI6MTY5OTI0Njc1Nn0.IVXJkZM3lEom-s1jxwgLe9QmDr3HMPZRWrs7y0qFo1JPaMzkiLnQhybqTU-quecWT48d2zhM_g30QwcVFRf2CA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"AGENCY01\",\r\n    \"name\":\"PUTU AGNECY\",\r\n    \"details\":\"AGEN BUS GAS\",\r\n    \"owner\":\r\n        {\r\n            \"id\" : 5\r\n        }\r\n    \r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/agency/createAgency",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"agency",
								"createAgency"
							]
						}
					},
					"response": []
				},
				{
					"name": "createBus",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"01BUS22\",\r\n    \"capacity\":49,\r\n    \"make\":\"jepang\",\r\n    \"agency\":\r\n        {\r\n            \"id\" : 1\r\n        }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/bus/createBus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"bus",
								"createBus"
							]
						}
					},
					"response": []
				},
				{
					"name": "createTrip",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fare\": 15,\r\n    \"journeyTime\":\"10:31:00\",\r\n    \"sourceStop\":{\r\n        \"id\":2\r\n    },\r\n    \"destStop\":{\r\n        \"id\":3\r\n    },\r\n    \"bus\":{\r\n        \"id\":1\r\n    },\r\n    \"agency\":{\r\n        \"id\":1\r\n    }\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/trip/createTrip",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"trip",
								"createTrip"
							]
						}
					},
					"response": []
				},
				{
					"name": "createTripSchedules",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tripDate\":\"2023-12-12\",\r\n    \"availableSeats\":50,\r\n    \"tripDetail\":{\r\n        \"id\":17\r\n    }\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/tripschedule/createTripSchedules",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"tripschedule",
								"createTripSchedules"
							]
						}
					},
					"response": []
				},
				{
					"name": "createTicket",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"seatNumber\": 5,\r\n    \"idScedule\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/ticket/createTicket",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"ticket",
								"createTicket"
							]
						}
					},
					"response": []
				},
				{
					"name": "createStop",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImp0aSI6IjUiLCJpYXQiOjE2OTg2NDE1OTYsImV4cCI6MTY5OTI0NjM5Nn0.nKnmDcPDWaVkBBUR98He4x5QYrKTZ66_sr6QMlJqfjzMLtOK4UODrXAruRrFhGdGQl0M6wJjOFai7WWOMvmKng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"02ANDO\",\r\n    \"name\":\"Martandu\",\r\n    \"detail\":\"halte Martandu\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/stop/createStop",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"stop",
								"createStop"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete agency",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJmYXRodWxlbWFpbCIsImlhdCI6MTY5ODIyMDc1NiwiZXhwIjoxNjk4ODI1NTU2fQ.Y0EryDzdM-syMq7AfEX6jSea7rgXDSpp2u4HshtzbRK9RKUaMuy4rVl2MAEvW4dE2QeeeilOhg86FPXzGieVoQ",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/agency/deleteAgency?id=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"agency",
								"deleteAgency"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "create and update All Table"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}